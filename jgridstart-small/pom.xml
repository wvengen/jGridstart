<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <!-- package information -->
  <groupId>nl.nikhef.jgridstart</groupId>
  <artifactId>jgridstart-small</artifactId>
  <version>1.10</version>
  <name>jGridstart application (compressed)</name>
  <url>http://jgridstart.nikhef.nl/</url>
  <description>Compressed version of jGridstart</description>

  <parent>
    <groupId>nl.nikhef.jgridstart</groupId>
    <artifactId>jgridstart</artifactId>
    <version>1.0</version>
    <relativePath>../pom.xml</relativePath>
  </parent>

  <properties>
    <mainClass>nl.nikhef.jgridstart.gui.Main</mainClass>
  </properties>

  <!-- just package the jGridstart application -->
  <dependencies>
    <dependency>
      <groupId>nl.nikhef.jgridstart</groupId>
      <artifactId>jgridstart-main</artifactId>
      <version>1.10</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>

      <!-- shade&proguard replace main artifact; need to clean before packaging -->
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <executions>
          <execution>
            <id>auto-clean</id>
            <phase>initialize</phase>
            <goals>
              <goal>clean</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- assemble project with dependencies into single jar
           (except BouncyCastle which needs its own signature) -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <executions>
          <execution>
            <phase>package</phase>
            <goals><goal>shade</goal></goals>
          </execution>
        </executions>
        <configuration>
          <shadedArtifactAttached>false</shadedArtifactAttached>
          <shadedClassifierName>shaded</shadedClassifierName>
          <promoteTransitiveDependencies>true</promoteTransitiveDependencies>
          <artifactSet>
            <excludes>
              <exclude>org.bouncycastle:${bcprov.depname}</exclude>
              <!-- exclude myself since here are no sources; required for performRelease=true -->
              <exclude>nl.nikhef.jgridstart:jgridstart-small</exclude>
            </excludes>
          </artifactSet>
          <filters>
            <filter>
              <artifact>*:*</artifact>
              <excludes><exclude>META-INF/*</exclude></excludes>
            </filter>
          </filters>
          <transformers>
            <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
              <manifestEntries>
                <Main-Class>${mainClass}</Main-Class>
                <Class-Path>${bcprov.fullname}.jar</Class-Path>
              </manifestEntries>
            </transformer>
          </transformers>
        </configuration>
      </plugin>

      <!-- Copy BouncyCastle jar to target, it's required for running the app.
           Also we need it to properly run ProGuard, as there is no other way to
           reference the dependency's jar directly. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-bouncycastle</id>
            <phase>package</phase>
            <goals><goal>copy</goal></goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.bouncycastle</groupId>
                  <artifactId>${bcprov.depname}</artifactId>
                  <version>${bcprov.version}</version>
                  <outputDirectory>${project.build.directory}</outputDirectory>
                  <destFileName>${bcprov.fullname}.jar</destFileName>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- ProGuard to minimise resulting file size -->
      <plugin>
        <groupId>com.github.wvengen</groupId>
        <artifactId>proguard-maven-plugin</artifactId>
        <executions>
          <execution>
            <phase>package</phase>
            <goals><goal>proguard</goal></goals>
          </execution>
        </executions>
        <configuration>
          <injar>${project.build.finalName}.jar</injar>
          <outjar>${project.build.finalName}.jar</outjar>
          <attach>false</attach>
          <attachArtifactClassifier></attachArtifactClassifier> <!-- main artifact -->
          <proguardInclude>src/main/assembly/proguard.conf</proguardInclude>
          <options>
            <option>-target ${maven.compiler.target}</option>
          </options>
          <includeDependency>false</includeDependency>
          <libs><lib>${project.build.directory}/${bcprov.fullname}.jar</lib></libs>
          <!-- some packages include non-resolved dependencies and cruft that seems
               to be included anyway, so this is quite important for ProGuard. -->
          <inFilter>
            !resources/schema/**,
            !org/xhtmlrenderer/tool/**,
            !org/xhtmlrenderer/swt/**,
            !org/xhtmlrenderer/SWT/**,
            !org/xhtmlrenderer/simple/xhtml/swt/**,
            !org/xhtmlrenderer/simple/SWT*,
            !com/lowagie/tools/**,
            !org/bouncycastle/mail/smime/examples/**,
            !META-INF/maven/**,
            !META-INF/*.txt,
            <!-- bouncycastle version mismatch; we don't use it, cross fingers -->
            !com/lowagie/text/pdf/TSAClient*,
            !com/lowagie/text/pdf/OcspClient*
          </inFilter>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>net.sf.proguard</groupId>
            <artifactId>proguard-base</artifactId>
            <version>4.6</version>
            <scope>runtime</scope>
          </dependency>
        </dependencies>
      </plugin>
      
      <!-- ordinary testing is done already in build step, skip now -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration><skipTests>true</skipTests></configuration>
      </plugin>

    </plugins>
  </build>

  <!-- don't build JavaDoc -->
  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <configuration><skip>true</skip></configuration>
      </plugin>
    </plugins>
  </reporting>

</project>
